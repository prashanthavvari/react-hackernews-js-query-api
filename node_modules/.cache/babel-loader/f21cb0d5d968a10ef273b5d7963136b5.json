{"ast":null,"code":"import _regeneratorRuntime from \"/Users/prashan-5380/Home/examples/react/hackerapi/react-hackernews-js-query-api/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/prashan-5380/Home/examples/react/hackerapi/react-hackernews-js-query-api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction fetchApi(_x) {\n  return _fetchApi.apply(this, arguments);\n}\n\nfunction _fetchApi() {\n  _fetchApi = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url) {\n    var v,\n        result,\n        _result,\n        json,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            v = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n\n            if (!(v === 1)) {\n              _context.next = 8;\n              break;\n            }\n\n            result = new XMLHttpRequest();\n\n            result.onreadystatechange = function () {\n              return this.response;\n            };\n\n            result.open('GET', url);\n            result.send();\n            _context.next = 15;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return fetch(url);\n\n          case 10:\n            _result = _context.sent;\n            _context.next = 13;\n            return _result.json();\n\n          case 13:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _fetchApi.apply(this, arguments);\n}\n\n;\n\nfunction nextPage(_x2) {\n  return _nextPage.apply(this, arguments);\n}\n\nfunction _nextPage() {\n  _nextPage = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(power) {\n    var nbPage, currentPage, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            nbPage = power.state.results.nbPages || 0;\n            currentPage = power.state.results.page + 1;\n\n            if (!(currentPage < nbPage)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 5;\n            return fetchApi(power.state.api + '&page=' + currentPage);\n\n          case 5:\n            result = _context2.sent;\n            power.setState({\n              results: result\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _nextPage.apply(this, arguments);\n}\n\n;\n\nfunction openLink(_x3) {\n  return _openLink.apply(this, arguments);\n} // async function componentWillMount() {\n//   let result = await this.fetchApi(this.state.api);\n//   this.setState({results: result});\n// }\n\n\nfunction _openLink() {\n  _openLink = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(url) {\n    var html;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetchApi(url, 1);\n\n          case 2:\n            html = _context3.sent;\n            document.querySelector('[class=\"i-frame\"]').innerHTML = html;\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n  return _openLink.apply(this, arguments);\n}\n\nexport { fetchApi, nextPage, openLink };","map":{"version":3,"sources":["/Users/prashan-5380/Home/examples/react/hackerapi/react-hackernews-js-query-api/src/common.js"],"names":["fetchApi","url","v","result","XMLHttpRequest","onreadystatechange","response","open","send","fetch","json","nextPage","power","nbPage","state","results","nbPages","currentPage","page","api","setState","openLink","html","document","querySelector","innerHTML"],"mappings":";;;SAAiBA,Q;;;;;;;2BAAf,iBAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA6BC,YAAAA,CAA7B,2DAA+B,CAA/B;;AAAA,kBACMA,CAAC,KAAK,CADZ;AAAA;AAAA;AAAA;;AAEQC,YAAAA,MAFR,GAEiB,IAAIC,cAAJ,EAFjB;;AAGID,YAAAA,MAAM,CAACE,kBAAP,GAA4B,YAAW;AACrC,qBAAO,KAAKC,QAAZ;AACD,aAFD;;AAGAH,YAAAA,MAAM,CAACI,IAAP,CAAY,KAAZ,EAAmBN,GAAnB;AACAE,YAAAA,MAAM,CAACK,IAAP;AAPJ;AAAA;;AAAA;AAAA;AAAA,mBASuBC,KAAK,CAACR,GAAD,CAT5B;;AAAA;AASQE,YAAAA,OATR;AAAA;AAAA,mBAUqBA,OAAM,CAACO,IAAP,EAVrB;;AAAA;AAUQA,YAAAA,IAVR;AAAA,6CAWWA,IAXX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaC;;SACcC,Q;;;;;;;2BAAf,kBAAwBC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,YAAAA,MADN,GACeD,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoBC,OAApB,IAA+B,CAD9C;AAEMC,YAAAA,WAFN,GAEoBL,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoBG,IAApB,GAA2B,CAF/C;;AAAA,kBAGMD,WAAW,GAAGJ,MAHpB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIuBb,QAAQ,CAACY,KAAK,CAACE,KAAN,CAAYK,GAAZ,GAAgB,QAAhB,GAAyBF,WAA1B,CAJ/B;;AAAA;AAIQd,YAAAA,MAJR;AAKIS,YAAAA,KAAK,CAACQ,QAAN,CAAe;AAACL,cAAAA,OAAO,EAAEZ;AAAV,aAAf;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOC;;SACckB,Q;;EAKf;AACA;AACA;AACA;;;;;;2BARA,kBAAwBpB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEmBD,QAAQ,CAACC,GAAD,EAAM,CAAN,CAF3B;;AAAA;AAEMqB,YAAAA,IAFN;AAGEC,YAAAA,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,EAA4CC,SAA5C,GAAwDH,IAAxD;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASF,SAAStB,QAAT,EAAmBW,QAAnB,EAA6BU,QAA7B","sourcesContent":["  async function fetchApi(url, v=0) {\n    if (v === 1) {\n      let result = new XMLHttpRequest();\n      result.onreadystatechange = function() {\n        return this.response;\n      };\n      result.open('GET', url);\n      result.send();\n    } else {\n      let result = await fetch(url);\n      let json = await result.json();\n      return json;\n    }\n  };\n  async function nextPage(power) {\n    let nbPage = power.state.results.nbPages || 0;\n    let currentPage = power.state.results.page + 1;\n    if (currentPage < nbPage) {\n      let result = await fetchApi(power.state.api+'&page='+currentPage);\n      power.setState({results: result});\n    }\n  };\n  async function openLink(url) {\n    // document.querySelector('[class=\"i-frame\"]').innerHTML = `<iframe src=${url}/>`;\n    let html = await fetchApi(url, 1);\n    document.querySelector('[class=\"i-frame\"]').innerHTML = html;\n  }\n  // async function componentWillMount() {\n  //   let result = await this.fetchApi(this.state.api);\n  //   this.setState({results: result});\n  // }\nexport { fetchApi, nextPage, openLink };\n"]},"metadata":{},"sourceType":"module"}